@using Microsoft.Extensions.DependencyInjection
@using DynaBlazor.Common
@using DynaBlazor.Adaptors
@using DynaBlazor.Component
@typeparam TValue where TValue : class

<CascadingValue Value="this">
    <CascadingValue Value="ColumnsProperty">
        @Columns
    </CascadingValue>
</CascadingValue>
<div class="row">
    <div class="col-12">
        @foreach (var i in DataFilters)
        {
            <span class="badge bg-light text-dark">@i.FilterBy : @i.FilterValue  <a style="cursor:pointer" @onclick="(()=>RemoveFilter(i))"><span class="fas fa-times"></span></a></span>
        } <button @onclick="OpenFilterModal" type="button" class="btn btn-primary btn-sm" style="border-radius: 20px;">
            <span class="fas fa-plus"></span> Filters
        </button>
    </div>
</div>
<div class="row mt-2">
    <div class="col-12">
        <table class="table">
            <thead>
                <tr>
                    @foreach (var i in ColumnsProperty)
                    {
                        <th width="@i.Width">
                            <a @onclick="@(() => SortBy(i))">      @(string.IsNullOrEmpty(i.Title) ? i.ColumnName : i.Title) &nbsp; <i class="fas @(string.IsNullOrEmpty(i.OrderDirection)?string.Empty:(i.OrderDirection=="desc"?"fa-caret-up":"fa-caret-down"))"></i></a>
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @if (AdaptorType != null)
                {
                    foreach (var i in LoadedData)
                    {
                        <tr>
                            @foreach (var column in ColumnsProperty)
                            {
                                if (column.Template != null)
                                {
                                    @column.Template.Invoke(i)
                                }
                                else
                                {
                                    <td>
                                        @i.GetType().GetProperty(column.ColumnName)?.GetValue(i)
                                    </td>
                                }
                            }
                        </tr>
                    }
                }

            </tbody>
        </table>
    </div>
</div>
<DynaBlazor.Layout.DynGridRow>
    <DynaBlazor.Layout.DynGridColumn>
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                <li class="page-item"><a class="page-link" @onclick="PagePrevious"><i class="fas fa-angle-left"></i></a></li>

                @* <li class="page-item"><a class="page-link">Page @dataPagination.CurrentPage of @dataPagination.TotalPages</a></li> *@
                @{
                    var pager = new Pager(dataPagination.TotalRows, dataPagination.CurrentPage);
                }
                @foreach (var i in pager.Pages)
                {
                    <li @onclick="@(()=>OnPage(i))" class="page-item @(i==dataPagination.CurrentPage?"active":string.Empty)"><a class="page-link">@i</a></li>
                }

                <li class="page-item"><a class="page-link" @onclick="PageNext"><i class="fas fa-angle-right"></i></a></li>
            </ul>
        </nav>
    </DynaBlazor.Layout.DynGridColumn>
</DynaBlazor.Layout.DynGridRow>
<DynaBlazor.Component.DynModal @ref="filterModal" OnModalClose="OnFilterModalClose">
    <Header>
        <h5>Add Filter</h5>
    </Header>
    <Body>
        <DynaBlazor.Layout.DynGridRow>
            <DynaBlazor.Layout.DynGridColumn>
                <label>Filter By:</label>
                <select class="form-select" @bind="@dataFilter.FilterBy">
                    <option value="">Select Filter</option>
                    @foreach (var i in ColumnsProperty.Where(x => !string.IsNullOrEmpty(x.ColumnName) && x.EnableFilter))
                    {
                        <option value="@i.ColumnName">@i.ColumnName</option>
                    }
                </select>
            </DynaBlazor.Layout.DynGridColumn>
        </DynaBlazor.Layout.DynGridRow>
        <DynaBlazor.Layout.DynGridRow RowClass="mt-2">
            <DynaBlazor.Layout.DynGridColumn>
                <label>Filter Value:</label>
                <input type="text" @bind-value="dataFilter.FilterValue" class="form-control" placeholder="Filter Value" />
            </DynaBlazor.Layout.DynGridColumn>
        </DynaBlazor.Layout.DynGridRow>
    </Body>
    <Footer>
        <button class="btn btn-primary" @onclick="ApplyFilter">Apply</button>
    </Footer>
</DynaBlazor.Component.DynModal>
@code {


}
